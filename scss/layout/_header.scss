@use "../global" as *;

/* -----------------------------

header style

----------------------------- */
.header {
  @if $fixedHeader == true {
    position: fixed;
    top: 0;
    left: 0;
  } @else {
    position: relative;
  }
  padding: 0px 2%;
  width: 100%;
  z-index: 10000;
  background: $baseColor;
  color: $baseBg;
  height: $headerHeight;
  display: flex;
  align-items: center;
  @include mqS {
    padding: 10px 4%;
    height: $headerHeightSP;
  }
}

.header-inner {
  width: 100%;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: space-between;
}

$lineThickness: 2px;
$lineBaseColor: color("white");
$lineBaseColorActive: color("black");
$gnavBtnWidth: 40px;
$gnavBtnHeight: 20px;
$gnavBtnWidthSP: 30px;
$gnavBtnHeightSP: 20px;
.gnav-btn {
  width: $gnavBtnWidth;
  height: $gnavBtnHeight;
  position: absolute;
  cursor: pointer;
  z-index: 10002;
  transition: 0.2s;
  top: calc(50% - (#{$gnavBtnHeight} / 2));
  right: 2.6%;
  @include mqS {
    width: $gnavBtnWidthSP;
    height: $gnavBtnHeightSP;
    top: calc(50% - (#{$gnavBtnHeightSP} / 2));
  }
  &:before,
  &:after {
    content: "";
    width: 100%;
    height: $lineThickness;
    background: $lineBaseColor;
    position: absolute;
    transition: 0.4s;
    right: 0;
  }
  &:before {
    top: 0;
  }
  &:after {
    bottom: 0;
    width: $gnavBtnWidth;
    @include mqS {
      width: $gnavBtnWidthSP;
    }
  }
  span {
    display: block;
    width: $gnavBtnWidth;
    height: $lineThickness;
    background: $lineBaseColor;
    position: absolute;
    top: calc(50% - (#{$lineThickness} / 2));
    right: 0;
    transition: 0.2s 0.2s;
    @include mqS {
      width: $gnavBtnWidthSP;
    }
  }
  &.is-gnav-active {
    &:before,
    &:after {
      background: $lineBaseColorActive;
      transition: 0.4s 0.2s;
      width: 80%;
    }
    &:before {
      transform: rotate(405deg);
      top: calc(50% + (#{$lineThickness} / 2));
    }
    &:after {
      bottom: calc(50% - (#{$lineThickness} + (#{$lineThickness} / 2)));
      transform: rotate(-405deg);
    }
    span {
      transform: scaleX(0);
      transition: 0.2s;
    }
  }
}
.gnav-btn--pos-right {
  right: 2.6%;
}
.gnav-btn--pos-left {
  left: 0;
}

.gnav {
  position: fixed;
  background: #fff;
  top: 0;
  width: 100%;
  max-height: 100%;
  height: 100%;
  z-index: 10000;
  padding: 100px 0 0 0;
  overflow-y: auto;
  transition: 0.4s;
  @include mqM {
    width: 468px;
  }
  @include mqS {
    width: 80%;
    padding: 50px 0 0 0;
    max-height: 100%;
  }
  &.is-gnav-start {
    .gnav-inner {
      opacity: 1;
      transition: 0.4s 0.3s;
      transform: translateX(0px);
    }
  }
  .gnav-inner {
    opacity: 0;
    height: 100%;
    width: 100%;
    transform: translateX(-30px);
  }
}

.gnav--pos-right {
  right: -100%;
  &.is-gnav-active {
    right: 0;
    transition: right 0.4s;
  }
}
.gnav--pos-left {
  left: -100%;
  &.is-gnav-active {
    left: 0;
    transition: left 0.4s;
  }
}

.gnav-bg {
  width: 100%;
  height: 100%;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 9999;
  background: rgba(0, 0, 0, 0.5);
}

.hnav {
  ul {
    display: flex;
    align-items: center;
    justify-content: flex-end;
    a {
      color: color(wt);
    }
    li {
      line-height: 1;
      &:not(:first-of-type) {
        margin-left: 2vw;
      }
    }
  }
}
